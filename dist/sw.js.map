{"version":3,"sources":["sw.js"],"names":["urlsToCache","staticCache","imgCache","allCacheNames","servePhoto","request","caches","open","then","cache","match","url","response","fetch","networkResponse","put","clone","self","addEventListener","event","waitUntil","addAll","keys","cacheNames","Promise","all","filter","cName","startsWith","includes","map","delete","requestURL","URL","origin","location","pathname","respondWith","status","Response","headers","Content-Type","catch","data","action","skipWaiting"],"mappings":"AAAA,IAAIA,aACJ,IACA,YACA,wBACA,iBACA,wBACA,gBACA,qBACA,eAEIC,YAAc,qBACdC,SAAW,iBACXC,eACAF,YACAC,UAuEJ,SAASE,WAAWC,GAEhB,OAAOC,OAAOC,KAAKL,UAAUM,KAAKC,GAEvBA,EAAMC,MAAML,EAAQM,KAAKH,KAAKI,GAE7BA,GACGC,MAAMR,GAASG,KAAKM,IAEvBL,EAAMM,IAAIV,EAAQM,IAAKG,EAAgBE,SAChCF,MA/EvBG,KAAKC,iBAAiB,UAAW,SAASC,GAExCA,EAAMC,UAEJd,OAAOC,KAAKN,aAAaO,KAAK,SAASC,GAErC,OAAOA,EAAMY,OAAOrB,kBAK1BiB,KAAKC,iBAAiB,SAAU,SAASC,GAEvCA,EAAMC,UAEJd,OAAOgB,OAAOd,KAAK,SAASe,GAE1B,OAAOC,QAAQC,IAEbF,EAAWG,OAAO,SAASC,GAEzB,OAAOA,EAAMC,WAAW,eAAiBzB,cAAc0B,SAASN,KAC/DO,IAAI,SAASH,GAEd,OAAOlB,MAAMsB,OAAOJ,WAO9BV,KAAKC,iBAAiB,QAAS,SAASC,GAEpC,IAAIa,EAAa,IAAIC,IAAId,EAAMd,QAAQM,KACnCqB,EAAWE,SAAWC,SAASD,QAE3BF,EAAWI,SAASR,WAAW,YAE/BT,EAAMkB,YAAYjC,WAAWe,EAAMd,UAI3Cc,EAAMkB,YAEF/B,OAAOC,KAAKN,aAAaO,KAAK,SAASC,GAEnC,OAAOA,EAAMC,MAAMS,EAAMd,SAASG,KAAK,SAAUI,GAE7C,OAAOA,GAAYC,MAAMM,EAAMd,SAASG,KAAK,SAASI,GAGxD,OADAH,EAAMM,IAAII,EAAMd,QAASO,EAASI,SACX,KAAnBJ,EAAS0B,OAEJ,IAAIC,SAAS,gKAClBC,SAAUC,eAAgB,eAGvB7B,IACN8B,MAAM,WAEP,OAAO,IAAIH,SAAS,sLAChBC,SAAUC,eAAgB,wBAwB5CxB,KAAKC,iBAAiB,UAAW,SAASC,GAEZ,gBAAtBA,EAAMwB,KAAKC,QAEX3B,KAAK4B","file":"sw.js","sourcesContent":["var urlsToCache = [\r\n'/',\r\n'js/idb.js',\r\n'js/indexController.js',\r\n'js/dbhelper.js',\r\n'js/restaurant_info.js',\r\n'css/index.css',\r\n'css/restaurant.css',\r\n'/index.html'\r\n];\r\nvar staticCache = \"rReviews-static-v5\";\r\nvar imgCache = \"rReviews-image\";\r\nvar allCacheNames = [\r\n    staticCache,\r\n    imgCache\r\n];\r\nself.addEventListener('install', function(event) \r\n{\r\n  event.waitUntil\r\n  (\r\n    caches.open(staticCache).then(function(cache) \r\n    {\r\n      return cache.addAll(urlsToCache);\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener('active', function(event) \r\n{\r\n  event.waitUntil\r\n  (\r\n    caches.keys().then(function(cacheNames) \r\n    {\r\n      return Promise.all\r\n      (\r\n        cacheNames.filter(function(cName) \r\n        {\r\n          return cName.startsWith('rReviews-') && !allCacheNames.includes(cacheNames);\r\n        }).map(function(cName) \r\n        {\r\n          return cache.delete(cName);\r\n        })\r\n      )\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener('fetch', function(event)\r\n{\r\n    let requestURL = new URL(event.request.url);\r\n    if (requestURL.origin === location.origin) \r\n    {\r\n        if (requestURL.pathname.startsWith('/imgRes/')) \r\n        {\r\n            event.respondWith(servePhoto(event.request));\r\n            return;\r\n        }\r\n    }\r\n    event.respondWith\r\n    (\r\n        caches.open(staticCache).then(function(cache) \r\n        {\r\n            return cache.match(event.request).then(function (response) \r\n            {\r\n                return response || fetch(event.request).then(function(response) \r\n            {\r\n              cache.put(event.request, response.clone());\r\n              if (response.status == 404) \r\n              {\r\n                return new Response(`<div style=\"position:absolute;top:50%;left:50%;width:200px;height:200px;margin:-100px 0 0 -100px;font-size:1.5em;\"><strong>Page not found 404</strong></div>`, {\r\n                  headers: {\"Content-Type\": \"text/html\"}\r\n                });\r\n              }\r\n              return response;\r\n            }).catch(function() \r\n            {\r\n              return new Response(`<div style=\"position:absolute;top:50%;left:50%;width:200px;height:200px;margin:-100px 0 0 -100px;font-size:1.5em;\"><strong>Page not found, you appear to be offline</strong></div>`, {\r\n                  headers: {\"Content-Type\": \"text/html\"}\r\n                });\r\n            });\r\n        });\r\n    })\r\n    );\r\n});\r\n\r\nfunction servePhoto(request)\r\n{\r\n    return caches.open(imgCache).then(cache => \r\n    {\r\n        return cache.match(request.url).then(response =>\r\n        {\r\n            if (response) return response;\r\n            return fetch(request).then(networkResponse =>\r\n            {\r\n                cache.put(request.url, networkResponse.clone());\r\n                return networkResponse;\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nself.addEventListener('message', function(event) \r\n{\r\n    if (event.data.action === 'skipWaiting') \r\n    {\r\n        self.skipWaiting();\r\n    }\r\n});"]}